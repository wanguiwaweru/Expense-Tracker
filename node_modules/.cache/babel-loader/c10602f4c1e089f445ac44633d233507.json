{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PushToTalkButton = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_client_1 = require(\"@speechly/react-client\");\n\nvar pubsub_js_1 = __importDefault(require(\"pubsub-js\"));\n\nvar types_1 = require(\"../types\");\n\nvar HintCallout_1 = require(\"./HintCallout\");\n\nrequire(\"@speechly/browser-ui/holdable-button\");\n\nvar PushToTalkButton = function (_a) {\n  var captureKey = _a.captureKey,\n      _b = _a.size,\n      size = _b === void 0 ? '6.0rem' : _b,\n      _c = _a.gradientStops,\n      gradientStops = _c === void 0 ? ['#15e8b5', '#4fa1f9'] : _c;\n\n  var _d = react_client_1.useSpeechContext(),\n      speechState = _d.speechState,\n      toggleRecording = _d.toggleRecording,\n      initialise = _d.initialise;\n\n  var _e = react_1.useState(react_client_1.SpeechState.Idle),\n      icon = _e[0],\n      setIcon = _e[1];\n\n  var buttonRef = react_1.useRef();\n  var speechStateRef = react_1.useRef(); // make stateRef always have the current count\n  // your \"fixed\" callbacks can refer to this object whenever\n  // they need the current value.  Note: the callbacks will not\n  // be reactive - they will not re-run the instant state changes,\n  // but they *will* see the current value whenever they do run\n\n  speechStateRef.current = speechState;\n  react_1.useEffect(function () {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) {\n      var button = buttonRef.current;\n      button.onholdstart = tangentPressAction;\n      button.onholdend = tangentReleaseAction;\n    }\n  }); // Change button face according to Speechly states\n\n  react_1.useEffect(function () {\n    setIcon(speechState); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [speechState]);\n\n  var tangentPressAction = function () {\n    pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentPress, {\n      state: speechStateRef.current\n    });\n\n    switch (speechStateRef.current) {\n      case react_client_1.SpeechState.Idle:\n      case react_client_1.SpeechState.Failed:\n        // Speechly & Mic initialise needs to be in a function triggered by event handler\n        // otherwise it won't work reliably on Safari iOS as of 11/2020\n        initialise().catch(function (err) {\n          return console.error('Error initiasing Speechly', err);\n        });\n        break;\n\n      case react_client_1.SpeechState.Ready:\n        toggleRecording().catch(function (err) {\n          return console.error('Error while starting to record', err);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var tangentReleaseAction = function (e) {\n    pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentRelease, {\n      state: speechStateRef.current,\n      timeMs: e.timeMs\n    });\n\n    switch (speechStateRef.current) {\n      case react_client_1.SpeechState.Recording:\n        toggleRecording().catch(function (err) {\n          return console.error('Error while stopping recording', err);\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return react_1.default.createElement(\"div\", null, react_1.default.createElement(\"holdable-button\", {\n    ref: buttonRef,\n    capturekey: captureKey,\n    icon: icon,\n    size: size,\n    gradientstop1: gradientStops[0],\n    gradientstop2: gradientStops[1]\n  }), react_1.default.createElement(HintCallout_1.HintCallout, null));\n};\n\nexports.PushToTalkButton = PushToTalkButton;","map":{"version":3,"sources":["../../src/components/PushToTalkButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushToTalkButton = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_client_1 = require(\"@speechly/react-client\");\nvar pubsub_js_1 = __importDefault(require(\"pubsub-js\"));\nvar types_1 = require(\"../types\");\nvar HintCallout_1 = require(\"./HintCallout\");\nrequire(\"@speechly/browser-ui/holdable-button\");\nvar PushToTalkButton = function (_a) {\n    var captureKey = _a.captureKey, _b = _a.size, size = _b === void 0 ? '6.0rem' : _b, _c = _a.gradientStops, gradientStops = _c === void 0 ? ['#15e8b5', '#4fa1f9'] : _c;\n    var _d = react_client_1.useSpeechContext(), speechState = _d.speechState, toggleRecording = _d.toggleRecording, initialise = _d.initialise;\n    var _e = react_1.useState(react_client_1.SpeechState.Idle), icon = _e[0], setIcon = _e[1];\n    var buttonRef = react_1.useRef();\n    var speechStateRef = react_1.useRef();\n    // make stateRef always have the current count\n    // your \"fixed\" callbacks can refer to this object whenever\n    // they need the current value.  Note: the callbacks will not\n    // be reactive - they will not re-run the instant state changes,\n    // but they *will* see the current value whenever they do run\n    speechStateRef.current = speechState;\n    react_1.useEffect(function () {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) {\n            var button = buttonRef.current;\n            button.onholdstart = tangentPressAction;\n            button.onholdend = tangentReleaseAction;\n        }\n    });\n    // Change button face according to Speechly states\n    react_1.useEffect(function () {\n        setIcon(speechState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [speechState]);\n    var tangentPressAction = function () {\n        pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentPress, { state: speechStateRef.current });\n        switch (speechStateRef.current) {\n            case react_client_1.SpeechState.Idle:\n            case react_client_1.SpeechState.Failed:\n                // Speechly & Mic initialise needs to be in a function triggered by event handler\n                // otherwise it won't work reliably on Safari iOS as of 11/2020\n                initialise().catch(function (err) { return console.error('Error initiasing Speechly', err); });\n                break;\n            case react_client_1.SpeechState.Ready:\n                toggleRecording().catch(function (err) { return console.error('Error while starting to record', err); });\n                break;\n            default:\n                break;\n        }\n    };\n    var tangentReleaseAction = function (e) {\n        pubsub_js_1.default.publish(types_1.SpeechlyUiEvents.TangentRelease, { state: speechStateRef.current, timeMs: e.timeMs });\n        switch (speechStateRef.current) {\n            case react_client_1.SpeechState.Recording:\n                toggleRecording().catch(function (err) { return console.error('Error while stopping recording', err); });\n                break;\n            default:\n                break;\n        }\n    };\n    return (react_1.default.createElement(\"div\", null,\n        react_1.default.createElement(\"holdable-button\", { ref: buttonRef, capturekey: captureKey, icon: icon, size: size, gradientstop1: gradientStops[0], gradientstop2: gradientStops[1] }),\n        react_1.default.createElement(HintCallout_1.HintCallout, null)));\n};\nexports.PushToTalkButton = PushToTalkButton;\n//# sourceMappingURL=PushToTalkButton.js.map"]},"metadata":{},"sourceType":"script"}