"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BigTranscript = void 0;
var react_1 = __importStar(require("react"));
var react_client_1 = require("@speechly/react-client");
var react_spring_1 = require("react-spring");
var styled_components_1 = __importDefault(require("styled-components"));
/**
 * A React component that renders the transcript and entities received from Speechly SLU API.
 *
 * The component is intended to be used for providing visual feedback to the speaker.
 *
 * @public
 */
var BigTranscript = function (props) {
    var segment = react_client_1.useSpeechContext().segment;
    var _a = react_spring_1.useSpring(function () { return ({
        to: {
            opacity: 0,
            maxHeight: '0rem',
            marginBottom: '0rem',
        },
    }); }), springProps = _a[0], setSpringProps = _a[1];
    react_1.useEffect(function () {
        if ((segment === null || segment === void 0 ? void 0 : segment.isFinal) === true) {
            setSpringProps({
                to: function (next, cancel) { return __awaiter(void 0, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, next({
                                    opacity: 0,
                                })];
                            case 1:
                                _a.sent();
                                return [4 /*yield*/, next({
                                        maxHeight: '0rem',
                                        marginBottom: '0rem',
                                    })];
                            case 2:
                                _a.sent();
                                return [2 /*return*/];
                        }
                    });
                }); },
                delay: 2000,
                config: { tension: 200 },
            });
        }
        else {
            setSpringProps({
                to: function (next, cancel) { return __awaiter(void 0, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, next({
                                    opacity: 1,
                                    maxHeight: '10rem',
                                    marginBottom: '1.5rem',
                                })];
                            case 1:
                                _a.sent();
                                return [2 /*return*/];
                        }
                    });
                }); },
                config: { tension: 500 },
            });
        }
    }, [segment, setSpringProps]);
    if (segment === undefined) {
        return react_1.default.createElement(BigTranscriptDiv, { className: "BigTranscript" });
    }
    // Assign words to a new list with original index (segments.words array indices may not correlate with entity.startIndex)
    var words = [];
    segment.words.forEach(function (w) {
        words[w.index] = { word: w.value, serialNumber: w.index, entityType: null, isFinal: w.isFinal };
    });
    // Tag words with entities
    segment.entities.forEach(function (e) {
        words.slice(e.startPosition, e.endPosition).forEach(function (w) {
            w.entityType = e.type;
            w.isFinal = e.isFinal;
        });
    });
    // Remove holes from word array
    words = words.flat();
    // Combine words of same type into HTML element snippets
    return (react_1.default.createElement(BigTranscriptDiv, { className: "BigTranscript", style: springProps }, words.map(function (w, index) {
        var key = segment.contextId + "/" + segment.id + "/" + index;
        return (react_1.default.createElement("span", { key: key },
            react_1.default.createElement(TransscriptItem, { word: w }, w.word),
            ' '));
    })));
};
exports.BigTranscript = BigTranscript;
var TransscriptItem = function (props) {
    var _a;
    var springProps = react_spring_1.useSpring(function () { return ({
        from: { opacity: 0 },
        to: { opacity: 1 },
        config: { tension: 500 },
    }); })[0];
    var entityProps = react_spring_1.useSpring({
        entityEffect: props.word.entityType !== null ? 1 : 0,
        config: { duration: 250 },
    });
    return (react_1.default.createElement(TransscriptItemDiv, { className: (props.word.entityType !== null ? 'Entity' : '') + " " + (props.word.isFinal ? 'Final' : '') + " " + ((_a = props.word.entityType) !== null && _a !== void 0 ? _a : '') },
        react_1.default.createElement(TransscriptItemBgDiv, { style: springProps }),
        react_1.default.createElement(TransscriptItemContent, { style: __assign(__assign({}, springProps), { transform: entityProps.entityEffect.interpolate(function (x) { return "translate3d(0, " + Math.sin(x * Math.PI) * -5 + "px, 0)"; }) }) }, props.children)));
};
var BigTranscriptDiv = styled_components_1.default(react_spring_1.animated.div)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  white-space: 'pre';\n"], ["\n  white-space: 'pre';\n"])));
var TransscriptItemDiv = styled_components_1.default(react_spring_1.animated.div)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  position: relative;\n  white-space: pre;\n  display: inline-block;\n"], ["\n  position: relative;\n  white-space: pre;\n  display: inline-block;\n"])));
var TransscriptItemContent = styled_components_1.default(react_spring_1.animated.div)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  z-index: 1;\n"], ["\n  z-index: 1;\n"])));
var TransscriptItemBgDiv = styled_components_1.default(react_spring_1.animated.div)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: absolute;\n  box-sizing: content-box;\n  width: 100%;\n  height: 100%;\n  margin: -0.5rem;\n  padding: 0.5rem;\n  background-color: #000;\n  z-index: -1;\n"], ["\n  position: absolute;\n  box-sizing: content-box;\n  width: 100%;\n  height: 100%;\n  margin: -0.5rem;\n  padding: 0.5rem;\n  background-color: #000;\n  z-index: -1;\n"])));
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=BigTranscript.js.map